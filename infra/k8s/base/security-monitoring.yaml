apiVersion: v1
kind: ConfigMap
metadata:
  name: security-config
  namespace: vtt
data:
  security.conf: |
    # Security headers configuration
    server.security.headers.frame-options=DENY
    server.security.headers.content-type-options=nosniff
    server.security.headers.xss-protection=1; mode=block
    server.security.headers.hsts=max-age=31536000; includeSubDomains; preload
    server.security.headers.csp=default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'
    server.security.headers.referrer-policy=strict-origin-when-cross-origin
    server.security.headers.permissions-policy=geolocation=(), microphone=(), camera=()
    
    # Rate limiting
    server.security.rate-limit.enabled=true
    server.security.rate-limit.requests-per-minute=100
    server.security.rate-limit.burst=20
    
    # Authentication
    server.security.auth.session-timeout=3600
    server.security.auth.max-login-attempts=5
    server.security.auth.lockout-duration=900
    
    # Logging
    server.security.audit.enabled=true
    server.security.audit.log-level=INFO
    server.security.audit.include-request-body=false
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: vtt-security-metrics
  namespace: vtt
  labels:
    app.kubernetes.io/name: vtt
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: server
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
apiVersion: networking.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: vtt-authz
  namespace: vtt
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: server
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/vtt/sa/client"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
        paths: ["/api/*"]
  - from:
    - source:
        namespaces: ["ingress-nginx"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/health", "/readyz", "/livez"]
