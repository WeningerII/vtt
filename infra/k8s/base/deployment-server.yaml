apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app.kubernetes.io/name: server
    app.kubernetes.io/part-of: vtt
spec:
  replicas: 1
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 120
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/part-of: vtt
    spec:
      automountServiceAccountToken: false
      serviceAccountName: server
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 15
      initContainers:
        - name: migrate
          image: ghcr.io/weningerii/vtt-server:main
          imagePullPolicy: IfNotPresent
          command: ["sh", "-lc", "prisma migrate deploy --schema apps/server/prisma/schema.prisma"]
          envFrom:
            - configMapRef:
                name: vtt-config
                optional: true
            - secretRef:
                name: vtt-secrets
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      containers:
        - name: server
          image: ghcr.io/weningerii/vtt-server:main
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: NODE_ENV
              value: "production"
          envFrom:
            - configMapRef:
                name: vtt-config
                optional: true
            - secretRef:
                name: vtt-secrets
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /livez
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      volumes:
        - name: tmp
          emptyDir: {}
