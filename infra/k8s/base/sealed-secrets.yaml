apiVersion: v1
kind: Secret
metadata:
  name: vtt-secrets
  namespace: vtt
  annotations:
    sealedsecrets.bitnami.com/managed: "true"
type: Opaque
stringData:
  # Database credentials - replace with actual sealed secret
  DATABASE_URL: "postgresql://username:password@postgres:5432/vtt"
  # JWT signing key - replace with actual sealed secret
  JWT_SECRET: "your-jwt-secret-here"
  # API keys - replace with actual sealed secret
  API_KEY: "your-api-key-here"
  # Session secret - replace with actual sealed secret
  SESSION_SECRET: "your-session-secret-here"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: vtt
spec:
  provider:
    vault:
      server: "https://vault.example.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "vtt-role"
          serviceAccountRef:
            name: "vault-auth"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vtt-external-secrets
  namespace: vtt
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: vtt-secrets
    creationPolicy: Owner
  data:
  - secretKey: DATABASE_URL
    remoteRef:
      key: vtt/database
      property: url
  - secretKey: JWT_SECRET
    remoteRef:
      key: vtt/auth
      property: jwt_secret
  - secretKey: API_KEY
    remoteRef:
      key: vtt/external
      property: api_key
  - secretKey: SESSION_SECRET
    remoteRef:
      key: vtt/auth
      property: session_secret
