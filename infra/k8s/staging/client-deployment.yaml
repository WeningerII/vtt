apiVersion: apps/v1
kind: Deployment
metadata:
  name: vtt-client
  namespace: vtt-staging
  labels:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: vtt-platform
      app.kubernetes.io/component: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vtt-platform
        app.kubernetes.io/component: client
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: vtt-client
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: client
        image: ghcr.io/weningerii/vtt-client:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "3000"
        envFrom:
        - configMapRef:
            name: vtt-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /app/.next/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: vtt-platform
            app.kubernetes.io/component: client
---
apiVersion: v1
kind: Service
metadata:
  name: vtt-client
  namespace: vtt-staging
  labels:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vtt-client
  namespace: vtt-staging
  labels:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vtt-client-hpa
  namespace: vtt-staging
  labels:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vtt-client
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vtt-client-pdb
  namespace: vtt-staging
  labels:
    app.kubernetes.io/name: vtt-platform
    app.kubernetes.io/component: client
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vtt-platform
      app.kubernetes.io/component: client
