apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vtt-ingress
  namespace: vtt
  labels:
    app.kubernetes.io/name: vtt-ingress
    app.kubernetes.io/part-of: vtt
  annotations:
    # Generic ingress annotations that work across cloud providers
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

    # Rate limiting (cloud-agnostic)
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"

    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' ws: wss:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
      add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

spec:
  # TLS configuration - certificate management handled by cert-manager
  tls:
    - hosts:
        - "${VTT_DOMAIN_NAME}"
      secretName: vtt-tls-secret

  rules:
    - host: "${VTT_DOMAIN_NAME}"
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vtt-client-service
                port:
                  number: 3000

---
# Fallback ingress for local development
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vtt-ingress-local
  namespace: vtt
  labels:
    app.kubernetes.io/name: vtt-ingress-local
    app.kubernetes.io/part-of: vtt
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /

spec:
  rules:
    - host: "localhost"
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vtt-client-service
                port:
                  number: 3000
    - host: "vtt.local"
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: vtt-server-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vtt-client-service
                port:
                  number: 3000
