name: Docker Publish

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (server)
        id: meta_server
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/vtt-server
          tags: |
            type=sha
            type=ref,event=branch

      - name: Extract metadata (client)
        id: meta_client
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/vtt-client
          tags: |
            type=sha
            type=ref,event=branch

      - name: Build and push server
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/server/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_server.outputs.tags }}
          labels: ${{ steps.meta_server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push client
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/client/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_client.outputs.tags }}
          labels: ${{ steps.meta_client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
