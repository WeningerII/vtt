server {
  listen 8080;
  server_name _;
  server_tokens off;

  # Serve static files
  root /usr/share/nginx/html;
  index index.html;

  # Container-friendly logging
  access_log /dev/stdout;
  error_log /dev/stderr notice;

  # Comprehensive security headers
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'; font-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self';" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()" always;

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

  # Hide nginx version
  more_clear_headers Server;

  # Caching for assets
  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|webp)$ {
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
    try_files $uri =404;
  }

  # API proxy with security
  location /api/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://server:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 30s;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
  }

  # Health checks
  location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
  }

  # Block access to sensitive files
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  location ~ \.(env|config|key|pem|crt)$ {
    deny all;
    access_log off;
    log_not_found off;
  }

  # SPA fallback with rate limiting
  location / {
    limit_req zone=static burst=100 nodelay;
    try_files $uri /index.html;
  }
}
